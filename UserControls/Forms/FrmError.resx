<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhCgL6AIcAAAAAAP///7/b/jA3QJ9qa4VeYI14e39obHBqb2RgZl1bXlxdZFZYYEVJUVVaY0VM
        V0pPV09UXDg7QENMWTQ7RTM6RDY9Rzg/SUVLVFJebllmd01YZ1pneFVhcU9aaUhSYEVPXEBJVTpCTb7Z
        /LjS9J2z0JityY6ivF1qe67G5XuMomFuf8ff/sbe/cng/s3i/s3h+0BGTsrb8tLj+pOfr3N8iNXl+rPA
        0ZumtXqCjeDt/9rn+FVicklUYlZjc1Bca0FLVzU9R77a/bzY+rvX+brV97nU9rfS87bR8rXQ8bTO77PN
        7rLM7bHL667H563G5qzG5arD4qjB36W925+205qxzZOpw4yhuouguYaasoWZsYOWroKVrX6RqHSFmnCB
        lWt7jmh3ildkdFJebVFdbExXZUtWZD1GUTY+SDE4QbXP8K/I6KzF5KK51pClv4qet4SXr4GUq219kGp5
        jGl4i2d2iGRyhMHc/sDb/bzW97nT84mctMPd/sXe/sLa+IWVqcPa97fM58rh/svi/r3R6kNKU8/k/tHl
        /tPm/s3g9zU6QNXn/tXn/djp/tfo/dHi9tnq/tTk+F5lbtrq/snX6N3s/t7s/tjm9+Du/zdASm17i9fp
        /rzM3oqWo6i2xj1CR+Lf3ucjA9EZA+NJPeRTSOZcUepkWexsYIhEPel0aex+dXA8OO2noMq+vb0PArsP
        AtEmHdIqIdw+NOZnXt6in7mrqvTm5bAKArwXE7MWEr0hG7shG6weGboiHL4jHtc0LMMvK7gwLNpHQMxH
        Qr1FQtRrZ+OJhduFglQ4N9ewr7UAAKQDAYsCAnACApwRELoXFP4qKf06Ov9AQP5TU48wL65EQv9jY/9x
        ccdcW7FaWP6Af/qCgv2PjZ5cXPqYmP6cm753dv6op/mqqv+xsf+7uzcpKfi7uryPj//Hx+a3tvfJyP/U
        1CEcHA4MDPXU1Pnf3/Xd3RUTE/Pu7snHx/r6+vLy8u7u7urq6uPj49vb29TU1JCQkE9PTwYGBgEBAf//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAACgL6AAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        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
</value>
  </data>
</root>